:root {
    /* Firebase-inspired Theme */
    /* Primary Accent: Adjusted Orange */
    --primary-color: #E69500; /* Darker/Less Sat Orange */
    --primary-hover: #CC8400; /* Even Darker Orange */

    --secondary-color: #8F8F8F; /* Gray 60 */
    --secondary-hover: #ABABAB; /* Gray 70 */

    /* Background: Dark Greys */
    --background-start: #1F1F1F; /* Gray 10 */
    --background-end: #000000;   /* Gray 0 (Black) */

    /* Contrast & Structure */
    --card-background: #303030;  /* Gray 20 */
    --text-color: #FFFFFF;       /* Gray 100 */
    --text-light: #E3E3E3;       /* Gray 90 */
    --border-color: #474747;     /* Gray 30 */
    --input-background: #474747; /* Gray 30 */
    --input-focus-border: var(--primary-color);
    --input-focus-shadow: rgba(230, 149, 0, 0.4); /* Adjusted Orange shadow */

    --success-color: #34A853; /* Google Cloud Green */
    --error-color: #DD2C00;   /* Firebase Red */

    --font-family: 'Inter', sans-serif; /* Keep Inter for now */
    --border-radius: 6px; /* Keep moderate radius */
    --box-shadow: none; /* Remove default shadow for flatter look */
    --button-shadow: none; /* Remove default shadow */
}

body {
    font-family: var(--font-family);
    margin: 0;
    padding: 40px 20px;
    /* Use solid dark background instead of radial gradient */
    background-color: var(--background-end); 
    background-image: none;
    color: var(--text-color);
    line-height: 1.6;
    min-height: 100vh;
    font-size: 16px;
}

.container {
    max-width: 1200px;
    margin: 0 auto 30px auto;
    padding: 35px 40px;
    
    background-color: var(--card-background);
    /* Keep hachure fill */
    background-image: 
        repeating-linear-gradient(
            -45deg,
            rgba(255, 255, 255, 0.02), /* Subtle light lines */
            rgba(255, 255, 255, 0.02) 1px,
            transparent 1px,
            transparent 6px /* Adjust line spacing */
        );
    border-radius: var(--border-radius); /* Keep existing radius */
    box-shadow: var(--box-shadow); 
    position: relative; 
    overflow: hidden; /* Important for border-radius + border-image */
    transition: none;

    /* --- Add Gradient Border --- */
    border-style: solid;
    border-width: 2px; /* Adjust thickness as needed */
    border-color: transparent; /* Make base border transparent */
    border-image-slice: 1; /* Use the entire gradient image for the border */
    border-image-source: linear-gradient(90deg, var(--primary-color), #C774E8); /* Adjusted Orange to Darker Pink/Purple */
    /* --- End Gradient Border --- */
}

.container:hover {
   transform: none;
   box-shadow: var(--box-shadow); 
}

/* Remove specific background/border overrides so these inherit the style */
.output-container {
    /* Inherits style */
}
.history-container {
     /* Inherits style */
}

h1 {
    text-align: center;
    color: var(--text-color); /* Fallback color */
    font-weight: 700; 
    margin-bottom: 40px; 
    font-size: 2rem; 

    /* Apply Text Gradient */
    background: linear-gradient(90deg, var(--primary-color), #C774E8); /* Use the same gradient as border */
    background-clip: text;
    -webkit-background-clip: text; /* For wider browser support */
    color: transparent; /* Make the text color transparent */
    /* Optional: Adjust display if needed, but inline-block might affect centering */
    /* display: inline-block; */ 
}

h2 {
    margin-top: 0;
    color: var(--text-color);
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 10px;
    margin-bottom: 25px; /* More space */
    font-size: 1.35rem; /* Slightly Larger */
    font-weight: 600;
}

/* Prompt Section */
.prompt-section {
    margin-bottom: 30px;
    padding: 0;
    border: none;
    background-color: transparent;
    border-radius: 0;
}

.prompt-section label,
#analysis-prompt-label /* Target specific label if needed */ {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: var(--text-light); 
    font-size: 0.95rem;
}

/* Apply consistent styles to all primary textareas */
.prompt-section textarea,
#svg-code-editor,
#analysis-prompt, 
#refinement-section textarea {
    width: 100%;
    box-sizing: border-box;
    padding: 12px 15px;
    margin-bottom: 15px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    font-size: 1rem;
    resize: vertical;
    background-color: #000000; /* SET TO BLACK */
    color: var(--text-color);
    box-shadow: none;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

/* Adjust specific textareas if needed */
#analysis-prompt {
    min-height: 60px; /* Keep specific min-height */
    font-size: 0.9rem; /* Keep specific font-size */
    line-height: 1.4;  /* Keep specific line-height */
}

#refinement-section textarea {
    min-height: 60px; 
    font-size: 0.9rem;
    line-height: 1.4;
}

.prompt-section textarea::placeholder,
#svg-code-editor::placeholder,
#analysis-prompt::placeholder, 
#refinement-section textarea::placeholder {
    color: var(--text-light); 
    opacity: 0.7;
}

/* Use new focus variables, keep background black */
.prompt-section textarea:focus,
#svg-code-editor:focus,
#analysis-prompt:focus,
#refinement-section textarea:focus {
    outline: none;
    border-color: var(--input-focus-border);
    box-shadow: 0 0 0 2px var(--input-focus-shadow);
    background-color: #000000; /* KEEP BLACK ON FOCUS */
}

/* Style Options */
/* REMOVE Unused Checkbox Styles */
/*
.style-options {
    margin-bottom: 20px;
}
.style-options > label {
    display: block;
    margin-bottom: 10px;
    font-weight: 500;
    color: var(--text-light);
}
.checkbox-group {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
}
.checkbox-item {
    display: flex;
    align-items: center;
    gap: 8px;
}
.checkbox-item input[type="checkbox"] {
    width: 16px;
    height: 16px;
    cursor: pointer;
    accent-color: var(--primary-color);
    background-color: var(--input-background);
    border: 1px solid var(--border-color);
    border-radius: 3px;
    appearance: none;
    -webkit-appearance: none;
    position: relative;
}
.checkbox-item input[type="checkbox"]:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}
.checkbox-item input[type="checkbox"]:checked::after {
    content: '';
    position: absolute;
    top: 2px;
    left: 5px;
    width: 4px;
    height: 8px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}
.checkbox-item label {
    cursor: pointer;
    font-size: 0.9rem;
    color: var(--text-light);
    user-select: none;
}
*/

#svg-code-editor {
    height: 450px;
    font-family: monospace;
    font-size: 0.9rem;
}

/* Buttons */
button {
    padding: 10px 20px;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600; /* Slightly bolder */
    transition: background-color 0.2s ease, box-shadow 0.2s ease, color 0.2s ease, transform 0.1s ease;
    box-shadow: var(--button-shadow);
}
button:active {
    transform: scale(0.98); /* Subtle press effect */
}

/* Primary Button (Generate) - Use new purple */
#generate-btn {
    background-color: var(--primary-color);
    color: white;
    display: inline-block; /* Back to inline-block */
    margin-left: 0;
    margin-right: 0;
    margin-top: 0; /* Remove top margin */
}
#generate-btn:hover {
    background-color: var(--primary-hover);
    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25), 0 3px 4px -1px rgba(0, 0, 0, 0.2);
}

/* Secondary Buttons (Save, Clear) */
#save-btn,
#clear-history-btn {
    background-color: var(--input-background);
    color: var(--text-light);
    border: 1px solid var(--border-color);
    font-weight: 500;
    box-shadow: none;
}
#save-btn:hover,
#clear-history-btn:hover {
    background-color: var(--border-color); /* Use border color for hover */
    border-color: var(--secondary-color);
    color: var(--text-color);
}

/* Tertiary/Utility Button (Copy) */
#copy-btn {
    background-color: transparent;
    color: var(--secondary-color);
    padding: 8px 15px;
    font-size: 0.9rem;
    font-weight: 500;
    box-shadow: none;
    border: 1px solid transparent;
}
#copy-btn:hover {
    color: var(--text-color);
    background-color: rgba(255, 255, 255, 0.08); /* Slightly more visible hover */
}
#copy-btn.copied {
    background-color: var(--success-color);
    color: white;
    border-color: var(--success-color);
}

button:disabled {
    background-color: var(--border-color);
    color: #64748b;
    cursor: not-allowed;
    box-shadow: none;
    border: 1px solid var(--border-color);
}

/* Status Message */
.status {
    margin-top: 20px; /* Increase space now that it's below button/selector */
    font-size: 0.9rem;
    color: var(--text-light);
}
.status[style*="color: red"] {
    color: #f87171; /* Lighter red for dark mode */
}
.status[style*="color: green"] {
    color: #34d399; /* Lighter green for dark mode */
}
.status.info {
    color: var(--text-light); /* Use the standard light text color */
}


/* Main Content Layout */
.main-content {
    display: flex;
    gap: 30px;
    margin-top: 0;
}

.editor-section, .preview-section {
    flex: 1;
    padding: 0;
    border: none;
    background-color: transparent;
    border-radius: 0;
    display: flex;
    flex-direction: column;
}

/* Align buttons below respective areas */
.editor-section button,
.preview-section button {
    margin-top: 15px;
    align-self: flex-start;
}

/* Preview Box */
.preview-box {
    width: 100%;
    height: 450px;
    border: 1px solid var(--border-color);
    /* Use a slightly lighter bg for preview contrast, or keep card bg */
    /* background-color: #4b5563; */
    background-color: var(--card-background);
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: auto;
    border-radius: var(--border-radius);
    padding: 10px;
    box-sizing: border-box;
    transition: background-color 0.2s ease; /* Add transition for background change */
}

/* Background Classes for Preview Box */
.preview-box.bg-transparent {
    background-color: transparent;
    /* Use a more subtle pattern */
    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.05) 25%, transparent 25%), linear-gradient(-45deg, rgba(255, 255, 255, 0.05) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, rgba(255, 255, 255, 0.05) 75%), linear-gradient(-45deg, transparent 75%, rgba(255, 255, 255, 0.05) 75%);
    background-size: 30px 30px; /* Larger squares */
    background-position: 0 0, 0 15px, 15px -15px, -15px 0px; /* Adjust position for new size */
}

.preview-box.bg-white {
    background-color: white;
    background-image: none; /* Remove transparent pattern */
}

.preview-box.bg-black {
    background-color: #1f2937; /* Use a dark color from the theme */
    background-image: none; /* Remove transparent pattern */
}

/* Style SVG elements for better visibility on dark bg if needed */
#svg-preview svg * {
    /* Example: Ensure default stroke isn't black if background is very dark */
    /* stroke: var(--text-light); */ /* Careful: this overrides SVG definitions */
}
#svg-preview svg {
    max-width: 100%;
    max-height: 100%;
    /* Explicitly set width to fill container and height to scale */
    width: 100%; /* Added */
    height: auto;
    display: block; /* Remove extra space below inline elements */
    margin: auto; /* Center if smaller than container */
    /* Add a subtle filter if contrast is an issue with generated SVGs */
    /* filter: brightness(1.1) contrast(1.1); */
}

/* Update Preview placeholder text color */
.preview-box p {
    color: var(--text-light); /* Ensure placeholder text is visible */
}

/* Preview Background Controls Styling */
.preview-background-controls {
    display: flex;
    align-items: center; /* Ensure vertical centering */
    flex-wrap: wrap; /* Allow items to wrap */
    gap: 8px; /* Slightly reduce gap */
    margin-bottom: 15px; /* Increase space below */
}

.preview-background-controls label {
    font-size: 0.9rem;
    color: var(--text-light);
    margin-right: 5px;
}

.bg-control-btn {
    background-color: var(--input-background);
    color: var(--text-light);
    border: 1px solid var(--border-color);
    padding: 5px 10px;
    font-size: 0.8rem;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: background-color 0.15s ease, border-color 0.15s ease;
}

.bg-control-btn:hover {
    background-color: var(--border-color);
    border-color: var(--secondary-color);
}

.bg-control-btn.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
    font-weight: 500;
}

/* Custom Color Picker Styles */
.color-picker-input {
    width: 28px; /* Adjust size as needed */
    height: 28px;
    padding: 0; /* Remove default padding */
    border: 1px solid var(--border-color);
    border-radius: 4px; /* Slightly rounded */
    cursor: pointer;
    margin-left: 5px; /* Space after Custom button */
    background-color: transparent; /* Make background transparent */
}

/* Remove default browser styling for color input */
.color-picker-input::-webkit-color-swatch-wrapper {
    padding: 0;
}
.color-picker-input::-webkit-color-swatch {
    border: none;
    border-radius: 3px; /* Inner swatch radius */
}
.color-picker-input::-moz-color-swatch {
    border: none;
    border-radius: 3px;
}

.color-picker-hex {
    font-size: 0.8rem;
    color: var(--text-light);
    margin-left: 5px;
    font-family: monospace;
    background-color: var(--input-background); /* Match input bg */
    padding: 3px 6px;
    border-radius: 3px;
}

/* Show picker/hex when custom button is active */
/* REMOVE THIS RULE
#bg-custom-btn.active + .color-picker-input,
#bg-custom-btn.active + .color-picker-input + .color-picker-hex {
    display: inline-block; 
}
*/

/* History Section */
.history-container {
    /* Adjust margin if necessary, inherits .container styles by default */
}

h3 {
    /* Ensure h3 within history section is styled correctly */
    /* Example: Reset margin if container padding handles it */
    /* margin-top: 0; */
    border-bottom: 1px solid var(--border-color); /* Keep the separator line */
    padding-bottom: 10px;
    margin-bottom: 25px;
    font-size: 1.3rem; /* Consistent size */
    font-weight: 600;
}

#history-list {
    list-style: none;
    padding: 0;
    max-height: 250px;
    overflow-y: auto;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    margin-bottom: 20px;
    background-color: #272934; /* Adjust slightly based on new palette */
}

#history-list li {
    padding: 12px 18px;
    border-bottom: 1px solid var(--border-color);
    cursor: pointer;
    transition: background-color 0.15s ease;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.95rem;
}

#history-list li:last-child {
    border-bottom: none;
}

/* Update History List Hover Color */
#history-list li:hover {
    /* Use new primary color RGB */
    background-color: rgba(230, 149, 0, 0.25); /* Adjusted Orange #E69500 at 25% opacity */
}

#history-list li .prompt-snippet {
    flex-grow: 1;
    margin-right: 15px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    color: var(--text-color);
    font-weight: 500;
}

#history-list li .timestamp {
    font-size: 0.8em;
    color: var(--text-light);
    flex-shrink: 0;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    body {
        padding: 20px 15px;
    }
    .container {
        padding: 20px;
    }
    .main-content {
        flex-direction: column;
        gap: 25px;
    }
    #svg-code-editor,
    .preview-box {
        height: 350px;
    }

    /* Adjust control button groups for mobile */
    .control-button-group {
        /* Revert to row layout, allow wrapping */
        flex-direction: row; 
        align-items: center; /* Vertically center items */
        flex-wrap: wrap; /* Allow wrapping */
        gap: 8px 10px; /* Row and Column gaps */
    }

    .control-button-group label {
        width: auto; 
        margin-bottom: 0; /* Remove bottom margin */
        flex-shrink: 0; /* Prevent label from shrinking */
        /* order: 1; */ 
    }

    .control-button-group .buttons {
        /* Buttons group takes available space */
        justify-content: flex-start; 
        width: auto; /* Allow natural width */
        flex-grow: 1; /* Allow button group to grow */
        /* order: 2; */ 
    }

    /* Position tooltip icon logically */
    .control-button-group .tooltip-icon {
        margin-left: auto; /* Push to the right end of the line */
        margin-top: 0; /* Remove top margin */
        align-self: center; /* Keep vertically centered */
        flex-shrink: 0; /* Prevent shrinking */
        /* order: 3; */ 
    }

    /* Ensure model selectors and buttons stack nicely */
    .generate-controls,
    .extractor-actions,
    .refinement-actions {
        align-items: stretch; /* Make children take full width */
    }
    .generate-controls .model-selector,
    .extractor-actions .extractor-model-selector,
    .refinement-actions .refine-model-selector {
        max-width: none; /* Allow full width */
        flex-wrap: wrap; /* Allow icon to wrap */
        gap: 5px 8px; /* Adjust row/column gap */
    }
    /* Ensure label and select take most space, icon wraps */
    .generate-controls .model-selector > label,
    .generate-controls .model-selector > select,
    .extractor-actions .extractor-model-selector > label,
    .extractor-actions .extractor-model-selector > select,
    .refinement-actions .refine-model-selector > label,
    .refinement-actions .refine-model-selector > select {
       flex-basis: auto; /* Allow shrinking/growing */
       flex-grow: 1;
    }
    .generate-controls .model-selector > select,
    .extractor-actions .extractor-model-selector > select,
    .refinement-actions .refine-model-selector > select {
        min-width: 150px; /* Prevent select from becoming too small */
    }
    
    .generate-controls .model-selector > .tooltip-icon,
    .extractor-actions .extractor-model-selector > .tooltip-icon,
    .refinement-actions .refine-model-selector > .tooltip-icon {
        flex-shrink: 0; /* Prevent icon shrinking */
        margin-left: auto; /* Push icon right initially */
        margin-top: 5px; /* Add margin when wrapped */
        /* If wrapping occurs, center it below */
        /* This might require the container to be display: block or adjust flex */
    }

    .generate-controls #generate-btn,
    .extractor-actions #analyze-btn,
    .refinement-actions #refine-btn {
        width: 100%; /* Make buttons full width */
        text-align: center;
    }

}

/* Removed Post-Generation Controls CSS */

/* Generator Options (Button Groups) */
.generator-options {
    display: flex;
    flex-direction: column; /* Stack groups vertically */
    gap: 15px;
    margin-bottom: 25px;
}

.control-button-group {
    display: flex;
    align-items: center;
    gap: 15px;
}

.control-button-group label {
    flex-shrink: 0;
    font-size: 0.95rem;
    color: var(--text-light);
    width: 100px; /* Adjust width as needed */
}

.control-button-group .buttons {
    display: flex; /* Lay out buttons in a row */
    gap: 5px; /* Space between individual buttons */
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
}

.control-button {
    background-color: var(--input-background);
    color: var(--text-light);
    border: 1px solid var(--border-color);
    padding: 6px 12px; /* Smaller padding for number buttons */
    font-size: 0.9rem;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: background-color 0.15s ease, border-color 0.15s ease, color 0.15s ease;
    min-width: 40px; /* Ensure buttons have a minimum width */
    text-align: center;
    font-weight: 500;
}

.control-button:hover {
    background-color: var(--border-color);
    border-color: var(--secondary-color);
}

.control-button.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
    font-weight: 600;
}

/* Slider Controls */
/* Remove slider styles if no longer needed */
/* .slider-controls { ... } */
/* .slider-group { ... } */
/* .slider-value { ... } */

/* Generate Controls (Button + Model Selector) */
.generate-controls,
.extractor-actions,
.refinement-actions {
    display: flex;
    flex-direction: column; /* Stack vertically */
    align-items: flex-start; /* Align items left */
    gap: 15px; /* Space between selector and button */
    margin-top: 25px;
    /* flex-wrap: wrap; No longer needed */
}

/* Remove order overrides */
/*
#generate-btn {
    order: 2;
}
.model-selector {
    order: 1;
}
.extractor-actions #analyze-btn {
    order: 2;
}
.extractor-model-selector {
    order: 1;
}
.refinement-actions #refine-status {
    order: 3; 
}
.extractor-actions #analysis-status {
    order: 3;
}
*/

/* Ensure model selectors take appropriate width */
.generate-controls .model-selector,
.extractor-actions .extractor-model-selector,
.refinement-actions .refine-model-selector {
    display: flex; /* Keep inner elements aligned */
    align-items: center;
    gap: 8px;
    width: 100%; /* Make selector container take full width */
    max-width: 400px; /* Limit max width */
    align-self: flex-start; /* Explicitly align self left */
}

/* Ensure buttons have some top margin if needed, but gap handles it */
.generate-controls #generate-btn,
.extractor-actions #analyze-btn,
.refinement-actions #refine-btn {
    margin-top: 0; /* Reset margin if any */
    align-self: flex-start; /* Explicitly align self left */
}

/* Ensure status messages align */
.generate-controls #status-message, /* Need to select this specifically */
.extractor-actions #analysis-status,
.refinement-actions #refine-status {
    width: 100%;
    text-align: left;
    margin-left: 0;
    margin-top: 5px; /* Small space above status */
}

/* Tab Navigation */
.tab-navigation {
    display: flex;
    justify-content: center; /* Center tabs */
    margin-bottom: 20px;
    border-bottom: 1px solid var(--border-color);
    padding: 0 20px; /* Add horizontal padding */
}

.tab-button {
    padding: 12px 25px;
    cursor: pointer;
    background: none;
    border: none;
    border-bottom: 3px solid transparent; /* Indicator */
    color: var(--text-light);
    font-size: 1.1rem; /* Slightly larger tab text */
    font-weight: 500;
    transition: color 0.2s ease, border-bottom-color 0.2s ease;
    margin-bottom: -1px; /* Overlap bottom border */
    box-shadow: none;
}

/* Make "How to Use" tab button slightly smaller */
.tab-button[data-tab="how-to-use-tab-content"] {
    font-size: 0.95rem; /* Further reduced from 1.0rem */
    /* Optionally reduce weight when inactive */
    /* font-weight: 400; */ 
}

.tab-button:hover {
    color: var(--text-color);
}

.tab-button.active {
    color: var(--primary-color); /* Use accent color for active tab */
    border-bottom-color: var(--primary-color);
    font-weight: 600;
}

/* Tab Content - only show active */
.tab-content {
    /* display: none; // Handled by inline style initially */
}
.tab-content.active {
    display: block;
}

/* Adjust container margin for first container after tabs */
.tab-content.active > .container:first-child {
    margin-top: 20px;
}

/* Content Extractor Styles */
.extractor-input-section h2,
#analysis-results-section h2 {
    /* Match other h2 styles */
    margin-top: 0;
    color: var(--text-color);
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 10px;
    margin-bottom: 25px;
    font-size: 1.35rem;
    font-weight: 600;
}

.upload-area {
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    gap: 15px;
}

.upload-area label {
    color: var(--text-light);
    font-size: 0.95rem;
}

/* Hide the actual file input */
.upload-area input[type="file"] {
    display: none;
}

.file-name-display {
    font-style: italic;
    color: var(--text-light);
    font-size: 0.9rem;
}

.image-preview-container {
    margin-top: 15px;
    margin-bottom: 20px;
    max-width: 400px; /* Limit preview size */
    border: 1px dashed var(--border-color);
    padding: 5px;
    background-color: var(--input-background);
    border-radius: var(--border-radius);
}

.image-preview-container img {
    display: block;
    max-width: 100%;
    height: auto;
    border-radius: calc(var(--border-radius) - 2px); /* Inner radius */
}

/* Drag and Drop Styles */
.upload-area.dragover,
.image-preview-container.dragover {
    border-color: var(--primary-color);
    border-style: solid; /* Change from dashed/solid to solid */
    background-color: rgba(242, 153, 74, 0.1); /* Use accent color with low opacity */
}

/* Output Container - Specific Linear Gradient */
.output-container {
    background: linear-gradient(180deg, /* Top to Bottom */
        var(--card-background) 0%, /* Darker color at the top */
        #243642 100% /* Lighter color at the bottom */
    );
    /* Styles specific to output container, if any */
}

/* New Drop Zone Styles */
.drop-zone {
    border: 2px dashed var(--border-color);
    border-radius: var(--border-radius);
    padding: 30px;
    text-align: center;
    margin-bottom: 20px;
    transition: border-color 0.2s ease, background-color 0.2s ease;
}

.drop-zone-prompt {
    margin: 0 0 10px 0; /* Reduced bottom margin */
    color: var(--text-light);
    font-weight: 500;
}

/* Style for the upload limit note */
.upload-limit-note {
    font-size: 0.8rem;
    color: var(--secondary-color); /* Use lighter grey */
    margin: -5px 0 15px 0; /* Adjust margins */
    font-style: italic;
}

.drop-zone.dragover {
    border-color: var(--primary-color);
    border-style: solid;
    background-color: rgba(242, 153, 74, 0.05); /* Lighter than upload-area hover */
}

.upload-area {
    /* Adjustments for inside drop-zone */
    margin-bottom: 15px; /* Less margin needed now */
    justify-content: center; /* Center items within the row */
}

/* Remove dragover styles from individual elements if drop-zone handles it */
/*
.upload-area.dragover,
.image-preview-container.dragover {
    ...
}
*/

.image-preview-container {
    /* Center preview within drop-zone */
    margin-left: auto;
    margin-right: auto;
    /* Keep other styles */
}

/* ... (rest of extractor styles) ... */

/* --------------------
 * Content Extractor Tab Specific Styles
 * -------------------- */

/* ... other extractor styles ... */

#analysis-results-section {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Stack children vertically */
    gap: 1rem; /* Reduce direct gap between blocks */
}

#analysis-results-section h3 {
    margin-bottom: 1rem;
    font-size: 1.2rem;
    color: var(--text-primary);
}

/* Style for each analysis block (label + textarea container) */
.analysis-block {
    display: flex;
    flex-direction: column; /* Stack label above textarea */
    gap: 1rem; /* Keep gap between label and textarea */
    margin-bottom: 2.5rem; /* Add explicit margin below each block */
}

/* Container for action buttons below analysis */
.analysis-actions {
    display: flex;
    gap: 1rem; /* Space between buttons */
    margin-top: 1.5rem; /* Space above buttons */
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
}

.analysis-block label {
    font-weight: bold;
    color: #D1DD58; /* Keep label color */
    font-size: 0.9rem;
}

#analysis-results-section textarea {
    width: 100%; /* Take full width */
    min-height: 100px; /* Minimum height */
    resize: vertical; /* Allow vertical resizing only */
    overflow-y: hidden; /* Prevent scrollbar */
    padding: 0.8rem;
    background-color: #000000; /* SET TO BLACK */
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    color: var(--text-color); 
    font-family: inherit;
    font-size: 0.9rem;
    line-height: 1.4;
    box-sizing: border-box; 
}

#analysis-results-section textarea:focus {
    outline: none;
    border-color: var(--input-focus-border); /* Use variable */
    box-shadow: 0 0 0 2px var(--input-focus-shadow); /* Use variable */
    background-color: #000000; /* KEEP BLACK ON FOCUS */
}

/* Ensure Convert button has some top margin when it appears */
#convert-btn {
    margin-top: 1rem;
}

/* ... rest of the styles ... */

/* Output Section Adjustments (if needed) */
.output-section {
    /* Styles for the container of editor/preview/refinement/history */
}

/* === Refinement Section Styles === */
#refinement-section {
    margin-top: 1.5rem; /* Space above refinement section */
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-color); /* Separator line */
}

#refinement-section label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: bold;
    color: var(--text-secondary);
}

/* Style for the new actions group */
.refinement-actions {
    display: flex;
    align-items: flex-end; /* Align bottom */
    gap: 1rem;
    flex-wrap: wrap;
}

/* Target the selector within this group */
.refinement-actions .refine-model-selector {
    flex-shrink: 0; 
}

/* Widen the select element itself */
.refinement-actions .refine-model-selector select {
    min-width: 300px; /* Increased width */
}

/* Target the button within this group */
.refinement-actions #refine-btn {
    margin-bottom: 0; /* Align with bottom of select */
}

/* Target the status within this group */
.refinement-actions #refine-status {
    order: 3; /* Ensure it comes after button */
    width: 100%;
    text-align: left;
    margin-left: 0;
    margin-top: 0.5rem;
}

#refinement-section textarea {
    /* Base styles applied via group selector */
    min-height: 80px; /* Slightly taller default */
}

/* ... other refinement styles ... */

/* Input Container (if needed, uses base .container style) */

/* Output Container - Uses base .container radial gradient */
.output-container {
    /* Styles specific to output container, if any */
}

/* History Container - Uses base .container radial gradient */
.history-container {
    /* Adjust margin if necessary */
}

#history-section {
    /* Remove styles if previously defined outside of container context */
}

#history-section {
    /* Remove styles if previously defined outside of container context */
}

/* Container for extractor model select and analyze button */
.extractor-actions {
    display: flex;
    align-items: flex-end; /* Align items to the bottom */
    gap: 1rem;
    flex-wrap: wrap; /* Allow wrapping */
    margin-top: 1rem; /* Space above */
}

/* Adjust model selector specifically within extractor actions if needed */
.extractor-model-selector {
    flex-grow: 1; /* Allow selector to take up space */
    max-width: 300px; /* Optional: Limit max width */
    order: 1; /* Ensure dropdown comes first */
}

.extractor-actions #analyze-btn {
    /* Adjustments if needed, e.g., margin-bottom to align with select */
    margin-bottom: 0; /* Assuming base button style has no margin */
    order: 2; /* Ensure button comes second */
}

/* Ensure status message comes after button */
.extractor-actions #analysis-status {
    order: 3; /* Place status message last in the row */
    width: 100%; /* Allow it to take full width on next line if wrapped */
    text-align: left; /* Align status text */
    margin-left: 0; /* Reset margin if needed */
    margin-top: 0.5rem; /* Add some space if it wraps */
}

/* --- Button Type Styles --- */

/* Primary Buttons (Generate, Analyze, Refine, etc.) */
.primary-btn {
    background-color: var(--primary-color); /* Firebase Orange */
    color: var(--text-color); /* White text */
    border: none; 
    box-shadow: var(--button-shadow); /* Use variable (none) */
    font-weight: 600;
}
.primary-btn:hover {
    background-color: var(--primary-hover); /* Darker Orange */
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2); /* Subtle shadow on hover */
}
.primary-btn:disabled {
    background-color: #a36800; /* Muted orange for disabled */
    color: var(--text-light); /* Light grey text */
    opacity: 0.7;
    cursor: not-allowed;
    box-shadow: none;
    border: none;
}

/* Secondary Buttons (Save, Clear, Copy Markdown) */
.secondary-btn {
    background-color: var(--input-background); /* Dark Grey */
    color: var(--text-light); /* Light Grey Text */
    border: 1px solid var(--border-color); /* Subtle border */
    font-weight: 500;
    box-shadow: var(--button-shadow); /* Use variable (none) */
}
.secondary-btn:hover {
    background-color: var(--border-color); /* Slightly lighter grey */
    border-color: var(--secondary-color);
    color: var(--text-color);
}
.secondary-btn:disabled {
    background-color: var(--input-background);
    color: #757575; /* Grey 50 */
    border-color: var(--border-color);
    opacity: 0.6;
    cursor: not-allowed;
    box-shadow: none;
}

/* Specific Button Overrides (If Needed) */
#generate-btn {
    /* Inherits .primary-btn styles */
}

#save-btn, 
#clear-history-btn,
#copy-markdown-btn {
    /* Inherits .secondary-btn styles */
}

#analyze-btn {
    /* Inherits .primary-btn styles */
}

#recreate-svg-btn {
    /* Inherits .primary-btn styles */
}

#refine-btn {
     /* Inherits .primary-btn styles */
}

#copy-btn { /* Specific style for small copy button */
    background-color: transparent;
    color: var(--secondary-color);
    padding: 8px 15px;
    font-size: 0.9rem;
    font-weight: 500;
    box-shadow: none;
    border: 1px solid transparent;
}
#copy-btn:hover {
    color: var(--text-color);
    background-color: rgba(255, 255, 255, 0.08); /* Slightly more visible hover */
}
#copy-btn.copied {
    background-color: var(--success-color);
    color: white;
    border-color: var(--success-color);
}

/* Remove old button styles if they exist */
/* e.g., #generate-btn specific bg, #save-btn specific bg */

/* Base button disabled state (can be overridden by specific types) */
button:disabled {
    /* Generic disabled style, .primary-btn:disabled / .secondary-btn:disabled are more specific */
    background-color: var(--border-color);
    color: #64748b;
    cursor: not-allowed;
    box-shadow: none;
    border: 1px solid var(--border-color);
}

.output-controls {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping */
    gap: 10px; /* Spacing between buttons/groups */
    align-items: center; /* Vertically align items */
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px solid var(--border-color);
}

/* Styling for the PNG dimension input group */
.png-dimensions {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 5px 10px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    background-color: var(--input-background);
}

/* Wrapper for title and input group */
.png-dimensions-container {
    display: flex;
    flex-direction: column; /* Back to column */
    align-items: flex-start; /* Align items left */
    gap: 10px; /* Adjust gap */
}

/* REMOVE complex alignment for tooltip */
/*
.png-dimensions-container > .tooltip-icon {
    align-self: flex-end; 
    margin-top: -1.2em; 
    margin-right: -5px; 
}
*/

.png-dimensions-container h4 {
    margin: 0; 
    font-size: 0.9rem;
    color: var(--text-light);
    font-weight: 500;
    /* Remove inline-flex, let it be block */
    /* display: inline-flex; */ 
    /* align-items: center; */
}

/* Tooltip icon within h4 needs slight adjustment */
.png-dimensions-container h4 .tooltip-icon {
    margin-left: 5px; 
    vertical-align: middle; /* Use middle alignment */
}

/* Style the new button */
#save-custom-png-btn {
    align-self: flex-start; /* Align button left */
    margin-top: 5px; /* Add some space above button */
    padding: 8px 15px; /* Slightly smaller padding */
    font-size: 0.9rem;
}

.png-dimensions label {
    font-size: 0.85rem;
    color: var(--text-light);
    margin-right: -4px; /* Pull label closer to input */
}

.png-dimensions input[type="number"] {
    width: 70px; /* Fixed width for dimension inputs */
    padding: 4px 6px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-small);
    background-color: var(--card-background); /* Slightly different bg */
    color: var(--text-color);
    font-size: 0.9rem;
    text-align: center;
    -moz-appearance: textfield; /* Hide spinners in Firefox */
}
.png-dimensions input[type="number"]::-webkit-outer-spin-button,
.png-dimensions input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none; /* Hide spinners in Chrome/Safari */
    margin: 0;
}

.png-dimensions input::placeholder {
    color: var(--text-light);
    opacity: 0.6;
    font-size: 0.85rem;
}

.png-dimensions input:focus {
    outline: none;
    border-color: var(--input-focus-border);
    box-shadow: 0 0 0 1px var(--input-focus-shadow);
    background-color: #3a3c4c; 
}

.dimension-note {
    font-size: 0.75rem;
    color: var(--text-secondary);
    margin-left: 5px;
    font-style: italic;
}

/* Loading Spinner Styles */
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.loading-spinner {
    display: none; /* Hidden by default */
    width: 1em; /* Size relative to font size */
    height: 1em;
    border: 2px solid rgba(255, 255, 255, 0.2); /* Light border */
    border-top-color: var(--primary-color); /* Use accent color for spinner part */
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
    vertical-align: middle; /* Align with text */
    margin-right: 8px; /* Space between spinner and status text */
}

.loading-spinner.visible {
    display: inline-block; /* Show when visible class is added */
}

/* --- Tooltip Styles --- */
.tooltip-icon {
    display: inline-block;
    margin-left: 8px; 
    font-size: 0.8em; 
    color: var(--primary-color); /* Use accent color for text */
    background-color: var(--card-background); /* Use card background */
    border: 1px solid var(--primary-color); /* Add border */
    border-radius: 50%;
    width: 1.4em; 
    height: 1.4em;
    line-height: 1.3em; /* Adjust line-height slightly for border */
    text-align: center;
    font-weight: bold;
    cursor: help;
    position: relative; 
    vertical-align: middle; 
}

/* Tooltip bubble - position to the right */
.tooltip-icon::after {
    content: attr(data-tooltip); 
    position: absolute;
    /* Position to the right */
    top: 50%; 
    left: 130%; /* Adjust distance from icon */
    transform: translateY(-50%); /* Center vertically */
    
    background-color: var(--card-background); 
    color: var(--text-light);
    padding: 8px 12px;
    border-radius: var(--border-radius);
    border: 1px solid var(--border-color);
    font-size: 0.85rem; 
    line-height: 1.4; 
    max-width: 280px; /* ADD max-width */
    width: max-content; /* Allow shrinking */
    z-index: 10; 
    
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s ease, visibility 0.2s ease;
    text-align: left; /* Ensure wrapped text is left-aligned */
}

/* Show on hover */
.tooltip-icon:hover::after {
    opacity: 1;
    visibility: visible;
}

/* Media Query for smaller screens (e.g., mobile) */
@media (max-width: 600px) {
    /* Ensure icon is a positioning context */
    .tooltip-icon {
        position: relative;
    }

    .tooltip-icon::after {
        /* Position centered below the icon */
        top: calc(100% + 8px); /* Position below icon + small gap */
        left: 50%;  
        transform: translateX(-50%); /* Center horizontally */
        right: auto; /* Remove right constraint */

        /* Width constrained by viewport */
        width: auto; /* Allow width to fill space up to max */
        max-width: calc(100vw - 40px); /* Max width with 20px padding each side */
        white-space: normal; /* Ensure text wraps */
        text-align: left;
    }
}
/* --- End Tooltip Styles --- */ 

/* Polished Dropdown Styles for all model selectors */
.model-selector select {
    padding: 10px 35px 10px 15px; /* Adjust padding (more right for arrow) */
    border-radius: var(--border-radius);
    background-color: var(--input-background);
    color: var(--text-light);
    border: 1px solid var(--border-color);
    font-size: 0.95rem; /* Slightly smaller font */
    font-weight: 500;
    cursor: pointer;
    min-width: 250px; /* Adjust as needed */
    transition: background-color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
    appearance: none;
    -webkit-appearance: none;
    /* Updated SVG arrow using text-light color */
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="%23E3E3E3" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/></svg>');
    background-repeat: no-repeat;
    background-position: right 12px center;
    background-size: 12px 12px;
}

.model-selector select:hover {
    background-color: var(--border-color); /* Use border color */
    border-color: var(--secondary-color);
    color: var(--text-color);
}

.model-selector select:focus {
    outline: none;
    border-color: var(--input-focus-border);
    box-shadow: 0 0 0 2px var(--input-focus-shadow);
    background-color: var(--input-background); /* Keep background on focus */
}

/* How to Use Tab Specific Styles */
#how-to-use-tab-content .container {
    /* Add specific container padding if needed, or inherit */
}

.how-to-section {
    margin-bottom: 30px; /* Space between sections */
}

.how-to-section h2 {
    /* Inherits general h2 style, maybe adjust margin */
    margin-bottom: 15px;
}

.how-to-section p,
.how-to-section ul,
.how-to-section ol {
    margin-bottom: 15px; /* Space below text blocks */
    line-height: 1.7; /* Slightly more line spacing for readability */
}

.how-to-section ul,
.how-to-section ol {
    padding-left: 25px; /* Indent lists */
}

.how-to-section li {
    margin-bottom: 8px; /* Space between list items */
}

.how-to-section strong {
    color: var(--primary-color); /* Highlight key terms */
}

/* Reduce font size for general text within How to Use tab */
#how-to-use-tab-content p,
#how-to-use-tab-content li {
    font-size: 0.9rem; /* Further reduced from 0.95rem */
} 